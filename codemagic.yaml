workflows:
  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        ANDROID_SDK_ROOT: "/Users/builder/programs/android-sdk"
    scripts:
      - name: Create Android project structure
        script: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
          # إنشاء هيكل مجلدات Android إذا كان مفقوداً
          if [ ! -d "android" ]; then
            echo "Creating Android project structure from scratch..."
            
            # إنشاء الهيكل الأساسي
            mkdir -p android/app/src/{main,debug}/java/com/yourproject
            mkdir -p android/app/src/main/res
            mkdir -p android/gradle/wrapper
            
            # تنزيل ملف gradlew الحقيقي من مستودع Gradle
            curl -L https://raw.githubusercontent.com/gradle/gradle/master/gradlew -o android/gradlew
            curl -L https://raw.githubusercontent.com/gradle/gradle/master/gradlew.bat -o android/gradlew.bat
            
            # تنزيل توزيعة Gradle كاملة واستخراج الملفات المطلوبة
            curl -L https://services.gradle.org/distributions/gradle-7.5.1-bin.zip -o gradle-bin.zip
            unzip -q gradle-bin.zip
            cp gradle-7.5.1/lib/gradle-wrapper.jar android/gradle/wrapper/
            cp gradle-7.5.1/src/coreui/resources/terminal.png android/gradle/wrapper/  # ملف اختياري
            rm -rf gradle-7.5.1 gradle-bin.zip
            
            # إنشاء ملفات أساسية
            echo "distributionBase=GRADLE_USER_HOME" > android/gradle/wrapper/gradle-wrapper.properties
            echo "distributionPath=wrapper/dists" >> android/gradle/wrapper/gradle-wrapper.properties
            echo "distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-bin.zip" >> android/gradle/wrapper/gradle-wrapper.properties
            echo "zipStoreBase=GRADLE_USER_HOME" >> android/gradle/wrapper/gradle-wrapper.properties
            echo "zipStorePath=wrapper/dists" >> android/gradle/wrapper/gradle-wrapper.properties
            
            # build.gradle (الملف الرئيسي)
            echo "buildscript {" > android/build.gradle
            echo "    ext {" >> android/build.gradle
            echo "        buildToolsVersion = \"33.0.0\"" >> android/build.gradle
            echo "        minSdkVersion = 21" >> android/build.gradle
            echo "        compileSdkVersion = 33" >> android/build.gradle
            echo "        targetSdkVersion = 33" >> android/build.gradle
            echo "    }" >> android/build.gradle
            echo "    repositories {" >> android/build.gradle
            echo "        google()" >> android/build.gradle
            echo "        mavenCentral()" >> android/build.gradle
            echo "    }" >> android/build.gradle
            echo "    dependencies {" >> android/build.gradle
            echo "        classpath(\"com.android.tools.build:gradle:7.3.1\")" >> android/build.gradle
            echo "    }" >> android/build.gradle
            echo "}" >> android/build.gradle
            
            # settings.gradle
            echo "rootProject.name = 'YourProject'" > android/settings.gradle
            
            # app/build.gradle
            echo "apply plugin: \"com.android.application\"" > android/app/build.gradle
            echo "android {" >> android/app/build.gradle
            echo "    compileSdkVersion 33" >> android/app/build.gradle
            echo "    defaultConfig {" >> android/app/build.gradle
            echo "        applicationId \"com.yourproject\"" >> android/app/build.gradle
            echo "        minSdkVersion 21" >> android/app/build.gradle
            echo "        targetSdkVersion 33" >> android/app/build.gradle
            echo "        versionCode 1" >> android/app/build.gradle
            echo "        versionName \"1.0\"" >> android/app/build.gradle
            echo "    }" >> android/app/build.gradle
            echo "}" >> android/app/build.gradle
            
            # AndroidManifest.xml
            echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>" > android/app/src/main/AndroidManifest.xml
            echo "<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\">" >> android/app/src/main/AndroidManifest.xml
            echo "    <application />" >> android/app/src/main/AndroidManifest.xml
            echo "</manifest>" >> android/app/src/main/AndroidManifest.xml
            
            # منح صلاحيات التنفيذ
            chmod +x android/gradlew
            
            echo "Basic Android project structure created!"
          else
            echo "Android folder exists. Continuing..."
          fi
          
          # التحقق من محتويات مجلد android
          echo "Android folder contents:"
          ls -la android/
          echo "Gradlew exists: $(ls android/gradlew 2>/dev/null && echo 'Yes' || echo 'No')"
          echo "gradle-wrapper.jar exists: $(ls android/gradle/wrapper/gradle-wrapper.jar 2>/dev/null && echo 'Yes' || echo 'No')"
          echo "gradle-wrapper.jar size: $(ls -lh android/gradle/wrapper/gradle-wrapper.jar | awk '{print $5}')"

      - name: Install Node.js
        script: |
          # تثبيت Node.js 18
          curl -o node-v18.20.2.pkg https://nodejs.org/dist/v18.20.2/node-v18.20.2.pkg
          sudo installer -pkg node-v18.20.2.pkg -target /
          export PATH="/usr/local/bin:$PATH"
          node -v
          npm -v

      - name: Install project dependencies
        script: |
          # تثبيت الاعتماديات الأساسية إذا لزم الأمر
          if [ ! -f "package.json" ]; then
            echo "Creating basic package.json..."
            echo '{' > package.json
            echo '  "name": "telon-gsm-sip-gateway",' >> package.json
            echo '  "version": "1.0.0",' >> package.json
            echo '  "dependencies": {' >> package.json
            echo '    "react": "18.2.0",' >> package.json
            echo '    "react-native": "0.72.6"' >> package.json
            echo '  }' >> package.json
            echo '}' >> package.json
          fi
          
          npm install --legacy-peer-deps
          
          # إنشاء ملفات Gradle إذا لزم الأمر
          if [ ! -f "android/gradlew" ]; then
            echo "Generating gradlew wrapper..."
            cd android
            ./gradlew wrapper --gradle-version 7.5.1
            cd ..
          fi
          
          chmod +x android/gradlew

      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
          echo "Local properties file content:"
          cat android/local.properties

      - name: Build Android debug APK
        script: |
          # الانتقال لمجلد android والبناء
          cd android
          ./gradlew assembleDebug --stacktrace
          
      - name: Locate and Upload APK
        script: |
          # البحث عن ملف APK
          APK_PATH=$(find . -name "app-debug.apk" | head -1)
          
          if [ -f "$APK_PATH" ]; then
            echo "APK found at: $APK_PATH"
            echo "File size: $(du -h "$APK_PATH" | cut -f1)"
            
            # رفع الملف إلى filebin.io
            echo "Uploading APK to filebin.io..."
            FILENAME=$(basename "$APK_PATH")
            DOWNLOAD_URL=$(curl -X POST -T "$APK_PATH" "https://filebin.net/?filename=${FILENAME}" | grep -o 'https://filebin.net/[^"]*')
            
            echo "Download URL: $DOWNLOAD_URL"
          else
            echo "APK not found! Build may have failed."
            echo "Searching for any APK files:"
            find . -name "*.apk" || echo "No APK files found"
            
            # فحص محتويات مجلد البناء
            echo "Checking build output directory:"
            ls -la android/app/build/outputs/apk/debug/ || true
            exit 1
          fi
    artifacts:
      - android/app/build/outputs/apk/debug/*.apk
