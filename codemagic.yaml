workflows:
  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        ANDROID_SDK_ROOT: "/Users/builder/programs/android-sdk"
    scripts:
      - name: Create Android project structure
        script: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
          # إنشاء هيكل مجلدات Android إذا كان مفقوداً
          if [ ! -d "android" ]; then
            echo "Creating Android project structure from scratch..."
            
            # إنشاء الهيكل الأساسي
            mkdir -p android/app/src/{main,debug}/java/com/yourproject
            mkdir -p android/app/src/main/res
            mkdir -p android/gradle/wrapper
            
            # إنشاء ملفات أساسية
            touch android/settings.gradle
            touch android/build.gradle
            touch android/gradlew
            touch android/gradle/wrapper/gradle-wrapper.properties
            touch android/app/build.gradle
            touch android/app/src/main/AndroidManifest.xml
            
            # كتابة محتوى أساسي لـ gradle-wrapper.properties
            echo "distributionBase=GRADLE_USER_HOME
            distributionPath=wrapper/dists
            distributionUrl=https\://services.gradle.org/distributions/gradle-7.5.1-bin.zip
            zipStoreBase=GRADLE_USER_HOME
            zipStorePath=wrapper/dists" > android/gradle/wrapper/gradle-wrapper.properties
            
            # كتابة محتوى أساسي لـ build.gradle في المستوى الأعلى
            echo "buildscript {
                ext {
                    buildToolsVersion = \"33.0.0\"
                    minSdkVersion = 21
                    compileSdkVersion = 33
                    targetSdkVersion = 33
                }
                repositories {
                    google()
                    mavenCentral()
                }
                dependencies {
                    classpath(\"com.android.tools.build:gradle:7.3.1\")
                }
            }" > android/build.gradle
            
            # كتابة محتوى أساسي لـ settings.gradle
            echo "rootProject.name = 'YourProject'" > android/settings.gradle
            
            # كتابة محتوى أساسي لـ app/build.gradle
            echo "apply plugin: \"com.android.application\"
            android {
                compileSdkVersion 33
                defaultConfig {
                    applicationId \"com.yourproject\"
                    minSdkVersion 21
                    targetSdkVersion 33
                    versionCode 1
                    versionName \"1.0\"
                }
            }" > android/app/build.gradle
            
            # كتابة محتوى أساسي لـ AndroidManifest.xml
            echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
            <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\">
                <application />
            </manifest>" > android/app/src/main/AndroidManifest.xml
            
            # منح صلاحيات التنفيذ
            chmod +x android/gradlew
            
            echo "Basic Android project structure created!"
          else
            echo "Android folder exists. Continuing..."
          fi
          
          # التحقق من محتويات مجلد android
          echo "Android folder contents:"
          ls -la android/
          echo "Gradlew exists: $(ls android/gradlew 2>/dev/null && echo 'Yes' || echo 'No')"

      - name: Install Node.js
        script: |
          # تثبيت Node.js 18
          curl -o node-v18.20.2.pkg https://nodejs.org/dist/v18.20.2/node-v18.20.2.pkg
          sudo installer -pkg node-v18.20.2.pkg -target /
          export PATH="/usr/local/bin:$PATH"
          node -v
          npm -v

      - name: Install project dependencies
        script: |
          # تثبيت الاعتماديات الأساسية إذا لزم الأمر
          if [ ! -f "package.json" ]; then
            echo "Creating basic package.json..."
            echo '{
              "name": "telon-gsm-sip-gateway",
              "version": "1.0.0",
              "dependencies": {
                "react": "18.2.0",
                "react-native": "0.72.6"
              }
            }' > package.json
          fi
          
          npm install --legacy-peer-deps
          
          # إنشاء ملفات Gradle إذا لزم الأمر
          if [ ! -f "android/gradlew" ]; then
            echo "Generating gradlew wrapper..."
            cd android
            ./gradlew wrapper --gradle-version 7.5.1
            cd ..
          fi
          
          chmod +x android/gradlew

      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
          echo "Local properties file content:"
          cat android/local.properties

      - name: Build Android debug APK
        script: |
          cd android
          ./gradlew assembleDebug --stacktrace
    artifacts:
      - android/app/build/outputs/apk/debug/*.apk
